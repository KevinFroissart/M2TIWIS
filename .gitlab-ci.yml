image: maven:3-eclipse-temurin-17-focal

# Maven configuration from https://gitlab.com/gitlab-org/gitlab-ce/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml
variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  # `-s makes make use repository-local settings that include proxy config`
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  ##MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true -s $CI_PROJECT_DIR/ci_settings.xml"
  ##HTTP_PROXY: "http://proxy.univ-lyon1.fr:3128"
  ##http_proxy: "http://proxy.univ-lyon1.fr:3128"
  ##HTTPS_PROXY: "http://proxy.univ-lyon1.fr:3128"
  ##https_proxy: "http://proxy.univ-lyon1.fr:3128"
  ##NO_PROXY: "localhost,127.0.0.1,forge.univ-lyon1.fr,docker"


# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - build
  - test

package-catalogue:
  stage: build
  script:
    - cd catalogue
    - mvn $MAVEN_CLI_OPTS install -DskipTests

unit-test-catalogue:
  stage: test
  services:
    - name: "postgres:15"
  variables:
    POSTGRES_DB: mdldb
    POSTGRES_USER: mdl
    POSTGRES_PASSWORD: mdlpwd
  script:
    - cd catalogue
    - mvn $MAVEN_CLI_OPTS install -DskipTests
    - mvn $MAVEN_CLI_OPTS -Dspring.profiles.active=ci test
